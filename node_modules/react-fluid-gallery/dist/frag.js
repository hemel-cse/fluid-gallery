"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = "\nuniform float time;\nuniform float progress;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform vec2 pixels;\nuniform vec2 uvRate1;\nuniform vec2 accel;\n\nvarying vec2 vUv;\nvarying vec2 vUv1;\n\nvec2 mirrored(vec2 v) {\n  vec2 m = mod(v, 2.0);\n  return mix(m, 2.0 - m, step(1.0, m));\n}\n\nfloat tri(float p) {\n  return mix(p, 1.0 - p, step(0.5, p))*2.0;\n}\n\nvoid main()  {\n  vec2 uv = gl_FragCoord.xy / pixels.xy;\n\n  float p = fract(progress);\n\n  float delayValue = p * 7.0 - uv.y * 2.0 + uv.x - 2.0;\n\n  delayValue = clamp(delayValue, 0.0, 1.0);\n\n  vec2 translateValue = p + delayValue*accel;\n  vec2 translateValue1 = vec2(-0.5,1.) * translateValue;\n  vec2 translateValue2 = vec2(-0.5,1.) * (translateValue - 1.0 - accel);\n\n  vec2 w = sin( sin(time)*vec2(0,0.3) + vUv.yx*vec2(0,4.)) * vec2(0, 0.5);\n  vec2 xy = w*(tri(p)*0.5 + tri(delayValue)*0.5);\n\n  vec2 uv1 = vUv1 + translateValue1 + xy;\n  vec2 uv2 = vUv1 + translateValue2 + xy;\n\n  vec4 rgba1 = texture2D(texture1, mirrored(uv1));\n  vec4 rgba2 = texture2D(texture2, mirrored(uv2));\n\n  vec4 rgba = mix(rgba1, rgba2, delayValue);\n  gl_FragColor = rgba;\n  // gl_FragColor = vec4(tri(progress));\n  // gl_FragColor = vec4(delayValue);\n  // gl_FragColor = vec4(delayValue);\n  // gl_FragColor = vec4(uv,1.,1.);\n}\n";
exports.default = _default;
//# sourceMappingURL=frag.js.map